<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:mongo="http://www.springframework.org/schema/data/mongo"
       xsi:schemaLocation=
               "http://www.springframework.org/schema/context
          http://www.springframework.org/schema/context/spring-context.xsd
          http://www.springframework.org/schema/data/mongo http://www.springframework.org/schema/data/mongo/spring-mongo.xsd
          http://www.springframework.org/schema/beans
          http://www.springframework.org/schema/beans/spring-beans.xsd">

   <!-- default properties
   Lowest order takes precedence, here -1 to allow ex. to be overriden by test at -2. -->
   <context:property-placeholder location="classpath:oasis-datacore-core.properties"
      order="0" ignore-unresolvable="true"/><!-- so defaults to importing PropertyPlaceholder/*Resolver -->

   <bean name="uriService" class="org.oasis.datacore.core.meta.SimpleUriService" /><!-- (overriden in -server) -->
   
   <context:component-scan base-package="org.oasis.datacore.core" />
   <context:annotation-config /><!-- actually auto enabled by previous line -->


   <!-- Default mongo bean name is 'mongo'
   NB. most of the mongo conf is done on client side !
   NB. no socket timeout because would NOT stop the query on the mongo server see #23 -->
   <mongo:mongo-client id="mongoClient" host="${oasis.datacore.mongodb.host}" port="${oasis.datacore.mongodb.port}"
   credentials="#{&quot;${oasis.datacore.mongodb.username}&quot; == null || &quot;${oasis.datacore.mongodb.username}&quot;.trim().isEmpty() || &quot;${oasis.datacore.mongodb.username}&quot;.trim().equals(&quot;null&quot;) ? &quot;&quot; : &quot;${oasis.datacore.mongodb.username}:${oasis.datacore.mongodb.password}@${oasis.datacore.mongodb.dbname}&quot;}">
      <mongo:client-options
         connections-per-host="100"
         threads-allowed-to-block-for-connection-multiplier="4"
      />
   </mongo:mongo-client>

   <!-- mongo:mongo id="mongo" replica-set="127.0.0.1:27017,localhost:27018"/ -->
  
  
  <!-- DB -->

   <!-- in order to remove _class in mongo stored objects
   see http://www.mkyong.com/mongodb/spring-data-mongodb-remove-_class-column/ -->
   <bean id="defaultMongoTypeMapper" class="org.springframework.data.mongodb.core.convert.DefaultMongoTypeMapper">
      <constructor-arg name="typeKey"><null/></constructor-arg><!-- and not "_class" -->
   </bean>
   
   <!-- remove _class in mongo stored objects,
   and disable validation because it might take the same time as serialization. -->
   <mongo:mapping-converter
         type-mapper-ref="defaultMongoTypeMapper"
         disable-validation="true"/>

  
   <!-- auditing see http://maciejwalkowiak.pl/blog/2013/05/24/auditing-entities-in-spring-data-mongodb/ -->
   <!-- mongo:auditing / -->
   <mongo:auditing auditor-aware-ref="auditor" />
   <bean id="auditor" class="org.oasis.datacore.core.security.SpringSecurityAuthAuditor"/>
   
   <!-- Make sure db-factory uses the configured mongo and not always 127.0.0.1:27017.
   http://stackoverflow.com/questions/16744260/spring-data-mongo-seems-to-ignore-host-in-xml-configuration 
   NB. ReadPreference is not available here but on MongoTemplate
   BEWARE T(com.mongodb.WriteConcern).ACKNOWLEDGED differs from string "ACKNOWLEDGED" WriteConcern,
   see http://stackoverflow.com/questions/17865270/error-handling-with-spring-data-and-mongo-java-driver-->
      <mongo:db-factory id="mongoDbFactory" dbname="${oasis.datacore.mongodb.dbname}"
      mongo-ref="mongoClient" />
      <!-- NB. WriteConcern rather by operation, conf used by DatacoreWriteConcernResolver -->

   <!-- Mongo Template.
   Referenced components (mappingConverter...) have to be specified if they are custom
   (and then this declaration must happen after their's).
   Using custom one to expose mongo DBCursor through CursorPreparer. -->
   <!-- bean id="mongoTemplate" class="org.springframework.data.mongodb.core.MongoTemplate" -->
   <bean id="mongoTemplate" class="org.springframework.data.mongodb.core.MongoTemplate">
      <constructor-arg name="mongoDbFactory" ref="mongoDbFactory"/>
      <constructor-arg name="mongoConverter" ref="mappingConverter"/>
      <!-- NB. WriteConcern rather by operation, conf used by DatacoreWriteConcernResolver -->
      <!--<property name="readPreference" value="${oasis.datacore.mongodb.readPreference}"/>-->
   </bean>
   <bean class=
                 "org.springframework.dao.annotation.PersistenceExceptionTranslationPostProcessor"/>
   <mongo:repositories base-package="org.oasis.datacore.core" /><!-- TODO -->

   <!-- TODO Custom converters.
   Referenced components (mappingConverter...) have to be specified if they are custom
   (and then this declaration must happen after their's). -->
   <!-- mongo:mapping-converter mapping-context-ref="mappingContext"
         mongo-template-ref="mongoTemplate" db-factory-ref="mongoDbFactory">
   <mongo:custom-converters>
      <mongo:converter>
         <bean class="org.oasis.datacore.sample.converter.DCURIWriteConverter"/>
      </mongo:converter>
      <mongo:converter>
         <bean class="org.oasis.datacore.sample.converter.DCEntityReadConverter"/>
      </mongo:converter>
      </mongo:custom-converters>
   </mongo:mapping-converter -->
 
</beans>
