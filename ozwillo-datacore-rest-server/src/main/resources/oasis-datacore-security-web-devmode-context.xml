<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:security="http://www.springframework.org/schema/security"
	xsi:schemaLocation="
      http://www.springframework.org/schema/beans
      http://www.springframework.org/schema/beans/spring-beans.xsd
      http://www.springframework.org/schema/security
      http://www.springframework.org/schema/security/spring-security.xsd">

   <!-- context:property-placeholder location="classpath:oasis-datacore-security.properties,classpath:oasis-datacore-rest-api.properties,classpath:oasis-datacore-rest-server.properties,classpath*:oasis-datacore-deploy*.properties"
      order="-1" ignore-unresolvable="true"/ -->

   <!-- no login entry point since playground is not protected (?????) -->
	<bean id="oauthAuthenticationEntryPoint" class="org.springframework.security.oauth2.provider.error.OAuth2AuthenticationEntryPoint">
		<property name="realmName" value="datacore" />
	</bean>
   
   <!-- login, must be first see http://www.baeldung.com/security-none-filters-none-access-permitAll -->
	<!-- security:http name="org.springframework.security.filterChains.login" pattern="/dc/login*" security="none" / -->

   <!-- Spring Security web filterChain : -->
	<!-- NB. could maybe be overriden (name="org.springframework.security.filterChains") but not its filters  -->
	<security:http name="org.springframework.security.filterChains"
	               entry-point-ref="oauthAuthenticationEntryPoint"
				   access-decision-manager-ref="accessDecisionManager"
				   authentication-manager-ref="authenticationManager"
				   create-session="never"
				   use-expressions="true"><!-- else Unsupported configuration attributes: [permitAll], see http://stackoverflow.com/questions/3388779/websphere-unsupported-configuration-attributes-permitall-using-spring -->
	
		<!-- As of Spring Security 4.0, CSRF protection is enabled by default https://stackoverflow.com/questions/31312844/spring-security-4-csrf-disable-via-xml
		Spring recommendation : If you are only creating a service that is used by non-browser clients, you will likely want to disable CSRF protection. https://stackoverflow.com/questions/21128058/invalid-csrf-token-null-was-found-on-the-request-parameter-csrf-or-header
		else when PUT from Playground Invalid CSRF Token &#39;null&#39; was found on the request parameter... -->
		<security:csrf disabled="true"/>
		
		<!-- Datacore status : -->
		<security:intercept-url pattern="/dc/status*" access="permitAll()" />
		
	   <!-- Datacore playground OASIS Kernel OAuth2 auth : -->
		<security:intercept-url pattern="/dc/playground/login*" access="permitAll()" />
		<security:intercept-url pattern="/dc/playground/token*" access="permitAll()" />
		<security:intercept-url pattern="/dc/playground/configuration*" access="permitAll()" /><!-- so configuration can be read by playground -->
		
		
		<!-- Datacore playground UI access : -->
		<!-- NB. /dc/playground/configuration is called with auth (from ajax) even in devmode -->
		<security:intercept-url pattern="/api-docs/**" access="permitAll()" /><!-- Swagger spec ; else 401 : undefined http://localhost:8080/api-docs -->
		<security:intercept-url pattern="/dc-ui/**" access="permitAll()" /><!-- playground UIs -->
		<security:intercept-url pattern="/" access="permitAll()" /><!-- for root redirect to playground UI -->
		
		<!-- Datacore protection : -->
		<security:intercept-url pattern="/**" access="isFullyAuthenticated()" /><!-- hasRole('SCOPE_DATACORE') and ; NB. datacore scope is already required in oauth:client-details-service ; protect everything else esp. /dc/** -->

		<security:custom-filter position="BASIC_AUTH_FILTER" ref="basicAuthenticationFilter" /><!-- DEVMODE ONLY -->
		<security:custom-filter ref="oauth2ProviderFilter" after="BASIC_AUTH_FILTER" /> <!--  before="PRE_AUTH_FILTER" -->
		<security:access-denied-handler ref="oauthAccessDeniedHandler" />
	</security:http>
	
</beans>
