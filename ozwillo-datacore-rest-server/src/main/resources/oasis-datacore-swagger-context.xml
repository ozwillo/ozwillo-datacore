<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
      xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
      xmlns:p="http://www.springframework.org/schema/p"
      xmlns:context="http://www.springframework.org/schema/context"
      xsi:schemaLocation=
      "http://www.springframework.org/schema/beans
      http://www.springframework.org/schema/beans/spring-beans.xsd
      http://www.springframework.org/schema/context
      http://www.springframework.org/schema/context/spring-context.xsd">

   <!-- default & overriding some properties (BEFORE import to take precedence over imported properties)
   (overriding ones are at end of comma-separated location)
   Lowest order takes precedence, here -1 to allow ex. to be overriden by test at -2, see
   http://stackoverflow.com/questions/11645360/overriding-properties-in-spring-3-1-with-a-local-properties-file
   However this doesn't work for -deploy*.properties, which has to be put instead in the same
   property placeholder as -server.properties instead and after it to work.
   Moreover without a first * after classpath (for jars ?) * doesn't work !
   See also http://www.baeldung.com/2012/02/06/properties-with-spring/ -->
   <context:property-placeholder location="classpath:oasis-datacore-rest-api.properties,classpath:oasis-datacore-rest-server.properties,classpath*:oasis-datacore-deploy*.properties"
      order="-1" ignore-unresolvable="true"/><!-- so defaults to importing PropertyPlaceholder/*Resolver -->


   <!-- SWAGGER -->
<!--   &lt;!&ndash; Swagger API listing resource &ndash;&gt;-->
<!--   <bean id="swagger.resourceJSON" class="com.wordnik.swagger.jaxrs.listing.ApiListingResourceJSON" />-->
<!--   &lt;!&ndash; Swagger writers &ndash;&gt;-->
<!--   <bean id="swagger.resourceWriter" class="com.wordnik.swagger.jaxrs.listing.ResourceListingProvider" />-->
<!--   <bean id="swagger.apiWriter" class="com.wordnik.swagger.jaxrs.listing.ApiDeclarationProvider" />-->
   <!-- Application Beans -->

   <!-- Swagger Beans -->
   <bean id="apiListingResource" class="io.swagger.jaxrs.listing.ApiListingResource"/>
   <bean id="swaggerSerializers" class="io.swagger.jaxrs.listing.SwaggerSerializers" scope="singleton"/>
   
   <!-- SWAGGER - this scans the classes for resources -->
   <bean id="swaggerConfig" class="io.swagger.jaxrs.config.BeanConfig">
      <property name="resourcePackage" value="org.oasis.datacore.rest.api"/>
      <property name="version" value="1.0.0"/>
      <property name="basePath" value="${datacoreApiServer.baseUrl}"/>
      <property name="title" value="Datacore API"/>
      <property name="description">
         <!-- 20141112 TODO no more need to resolve placeholders (done in ajax) -->
         <!-- bean factory-bean="springPlaceholderResolver" factory-method="resolveEmbeddedValue">
            <constructor-arg type="java.lang.String"  -->
               <bean class="org.apache.commons.io.IOUtils" factory-method="toString">
                  <constructor-arg value="classpath:swagger/dc/description.html" type="java.io.InputStream" />
               </bean>
            <!-- /constructor-arg>
         </bean -->
      </property>
      <property name="contact" value="http://www.ozwillo.com"/>
      <property name="license" value="Affero GPL (except for client libraries, which are LGPL)"/>
      <property name="licenseUrl" value="http://www.gnu.org/licenses/agpl-3.0.html"/>
      <property name="scan" value="true"/>
   </bean>

</beans>
